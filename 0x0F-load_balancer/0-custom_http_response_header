#!/usr/bin/env bash
# installs and configures nginx on a given machine
if [[ ! -x /usr/local/sbin/nginx ]];
then
     Install packages that will assist to configure nginx package repo
     apt install -y curl gnupg2 ca-certificates lsb-release \
             debian-archive-keyring

     # Download and save nginx signing key
     curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \
     | tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null

     # Setting variables for apt updating apt source file
     OS=$(lsb_release -is | tr '[:upper:]' '[:lower:]') RELEASE=$(lsb_release -cs)
     echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
     http://nginx.org/packages/${OS} ${RELEASE} nginx" \ | tee /etc/apt/sources.list.d/nginx.list

     # updating package information and install nginx
     apt update -y
     apt install -y nginx
fi

 # Run nginx for first time
 nginx

# Change default webpage to server for server root domain request
echo "Hello World!" > /usr/share/nginx/html/index.html
echo "Ceci n'est pas une page" > /usr/share/nginx/html/404.html
the_host=$(hostname)

cat <<-EOF > /etc/nginx/conf.d/default.conf
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost;
    add_header X-Served-By ${the_host};

    root /usr/share/nginx/html;
    error_page 404 /404.html;

    location / {
        index index.html;
    }
    location /redirect_me {
        return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
    }
    location = /404.html {
        index 404.html;
    }
}
EOF
nginx -s reload
